!function(){"use strict";var e=siteConfig.resourceVersion;angular.module("emixApp").config(["$routeProvider",function(t){t.when("/operations/accountoperations",{controller:"accountoperations_index",templateUrl:"/nimdalenap/home/ngApp/pages/application/monitoring/operations/account/index.html"+e}).when("/customer/customerlist",{controller:"customerlist_index",templateUrl:"/nimdalenap/home/ngApp/pages/application/accounting/merchant/customer/index.html"+e}).when("/accounting/dashboard",{controller:"accountingdashboard_index",templateUrl:"/nimdalenap/home/ngApp/pages/application/accounting/dashboard/index.html"+e})}])}(),Emix.Api.Application.operation=Emix.Api.Application.operation||{},Emix.Api.Application.merchant=Emix.Api.Application.merchant||{},Emix.Api.Application.accounting=Emix.Api.Application.accounting||{},Emix.Api.Application.operation.getOperationRequestWrappers=apiBaseUrl+"/operation/getOperationRequestWrappers",Emix.Api.Application.operation.getOperationRequestWrapperInfo=apiBaseUrl+"/operation/getOperationRequestWrapperInfo",Emix.Api.Application.operation.getOperationRequestStatuses=apiBaseUrl+"/operation/getOperationRequestStatuses",Emix.Api.Application.merchant.getMerchantCustomers=apiBaseUrl+"/merchant/getMerchantCustomers",Emix.Api.Application.accounting.getAccountingDashboardWrapper=apiBaseUrl+"/accountRest/getAccountingDashboardWrapper",angular.module("emixApp.controllers").controller("accountoperations_index",["$scope","httpServices","$filter","$modal","shareFunc","sharedInfo","$rootScope","$translate","$route",function(e,t,n,a,o,r,c,i,s){"use strict";e.userEvents={onSelected:function(t){e.selectedUser=t,e.bindDataGrid()}},e.userOptions={id:"dbxUserAccountOperations",dataKeyField:"id"},e.selectedUserId="",e.selectedUser="",e.openDetails=function(e){var t={};t.rgOptions={label:"accountingOperation.accountingOperations",apiUrl:Emix.Api.Application.operation.getOperationRequestWrapperInfo,apiParams:{operationRequestId:e.id}},t.rgTemplate=$("#operationStatementDeails").html(),t.rgRows=[],t.additionalData={shopCurrency:c.shopCurrency,shopFractionSize:c.shopFractionSize},t.events={},t.allowPrint=!0,o.openModal(t,"/panelshare/directives/report-viewer/modal/index.html","reportviewermodal_index","lg",function(e){},function(){})},e.bindDataGrid=function(){e.dtOptions.apiParams.userId=e.selectedUserId,e.dtEvents.dataBind()},e.dtOptions={id:"dtAccountOperations",saveState:!0,allowFilter:!0,additionalSortFieldName:"id",apiUrl:Emix.Api.Application.operation.getOperationRequestWrappers,apiParams:{}},e.dtCols=[{name:"id",title:"common.id",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-1",dataType:r.dataType.int},{name:"title",keyName:"operationTypeId",title:"accounting.operationType",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-3",dataType:r.dataType.list,filterList:Emix.Api.Application.OperationType.getAllOperationTypeWrappers,filterListKey:"id",filterListValue:"caption"},{name:"amount",title:"common.amount",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2",dataType:r.dataType.money,cellTemplate:'<span>{{data.amount | currency:"":additionalData.shopFractionSize}} <small>{{additionalData.shopCurrency}}</small></span>'},{name:"trackingCode1",keyName:"trackingCode",title:"common.trackingCode",allowSorting:!0,isGlobalFilterParam:!0,cellClass:"text-center",headerClass:"text-center col-md-2",dataType:r.dataType.string},{name:"createDate",title:"common.createDate",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2",dataType:r.dataType.date},{name:"statusDesc",keyName:"status",title:"common.status",allowSorting:!1,cellClass:"text-center",headerClass:"text-center col-md-2",dataType:r.dataType.list,filterList:Emix.Api.Application.operation.getOperationRequestStatuses,filterListKey:"id",filterListValue:"caption"},{name:"",title:"",allowSorting:!1,headerClass:"text-center",cellClass:"tdcommand",cellTemplate:'<button class="btn btn-warning" ng-click="events.detail(data);"\n               button-text="accounting.statement">\n          </button>'}],e.dtData=[],e.dtAdditionalData={shopCurrency:c.shopCurrency,shopFractionSize:c.shopFractionSize},e.dtEvents={detail:function(t){e.openDetails(t)}}}]),angular.module("emixApp.controllers").controller("refund_index",["$scope","httpServices","PagerService","$filter","shareFunc","sharedInfo","$rootScope",function(e,t,n,a,o,r,c){"use strict";e.addRefund=Emix.Pages.refundAdd,NProgress.start(),$.blockUI(),t.getAllRequestRefundMonies(0,99).then(function(e){e.data},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()}),e.dtOptions={id:"dtRefundList",apiUrl:Emix.Api.Application.refund.getAllRequestRefundMonies,apiParams:{},saveState:!0,allowFilter:!0,additionalSortFieldName:"id"},e.dtCols=[{name:"id",title:"common.id",allowSorting:!0,cellClass:"text-center",headerClass:"text-center tdmini",dataType:r.dataType.int},{name:"reqUserName",title:"accounting.applicant",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2"},{name:"reqDesc",title:"common.description",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2"},{name:"reqAmount",title:"common.amount",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2",dataType:r.dataType.money,cellTemplate:'<span>{{data.reqAmount | currency:"":additionalData.shopFractionSize}} <small>{{additionalData.shopCurrency}}</small></span>'},{name:"createDate",title:"common.saveDate",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2",dataType:r.dataType.date},{name:"financeDestValue",title:"destination",allowSorting:!0,cellClass:"text-center",cellTemplate:"<span>{{data.financeDestCaption}}: {{data.financeDestValue}}</span>",headerClass:"text-center col-md-2"},{name:"statusDesc",title:"common.status",keyName:"status",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2",dataType:r.dataType.list,filterList:Emix.Api.Application.refund.getRefundStatuses,filterListKey:"id",filterListValue:"caption"},{name:"",title:"",allowSorting:!1,headerClass:"text-center",cellClass:"tdcommand",cellTemplate:'<button class="btn btn-info" ng-click="events.detailRefund(data)" button-type="details"></button>'}],e.dtData=[],e.dtAdditionalData={shopCurrency:c.shopCurrency,shopFractionSize:c.shopFractionSize},e.dtEvents={detailRefund:function(t){var n={id:t.id,reqUserId:t.reqUserId};o.openModal(n,"/nimdalenap/home/ngApp/pages/application/accounting/refund/details.html","detailsrefund_index",null,function(t){r.getNeedRefresh()&&e.dtEvents.dataBind()},function(){r.getNeedRefresh()&&e.dtEvents.dataBind()})}}}]);var editPayDate=function(){var e=angular.element(document.getElementById("payDate")).scope();e.result.payDate=document.getElementById("payDate").value,e.$apply()};angular.module("emixApp.controllers").controller("detailsrefund_index",["$scope","httpServices","$rootScope","sharedInfo","shareFunc","$filter","$modalInstance","passObject","$translate",function(e,t,n,a,o,r,c,i,s){"use strict";function l(n){NProgress.start(),$.blockUI(),t.getRequestRefundMoneyInfo(n).then(function(n){var a=n.data;e.result=a.returnObject,t.getAccountInfo(e.result.accountId).then(function(t){var n=t.data;e.accountInfo=n.returnObject},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})}e.showBreadcrump=!i,e.showError=!1,i&&l(i.id);var d=function(){return e.payDateShowError=2===e.newStatus&&!e.result.payDate,e.payBankShowError=2===e.newStatus&&!e.result.payBankId,e.payBankRefShowError=2===e.newStatus&&!e.result.payBankRef,e.toBankShowError=!e.result.toBankId&&"account_number"===e.result.financeDestName,e.toAccountNumberShowError=!e.result.financeDestValue||0===e.result.financeDestValue.length,e.toAccountNumberShowMaxError=e.result.financeDestValue&&e.result.financeDestValue.length>35,e.statusToShowError=!e.newStatus,!(e.payDateShowError||e.payBankShowError||e.payBankRefShowError||e.toBankShowError||e.toAccountNumberShowError||e.toAccountNumberShowMaxError||e.statusToShowError)};e.$watch("result",function(t,n){e.showError&&d()},!0),e.$watch("newStatus",function(t,n){e.showError&&d()},!0),e.processRequestRefundMoney=function(){if(e.showError=!0,1==e.result.status||2==e.result.status){if(!d())return void toastr.error(s.instant("common.completeFormCarefully"));e.cRequestRefundMoney={id:e.result.id,status:e.newStatus,payBankId:e.result.payBankId,payBankRef:e.result.payBankRef,payDate:e.result.payDate,payDsc:e.result.payDesc,toBankId:e.result.toBankId,financeDestName:e.result.financeDestName,financeDestValue:e.result.financeDestValue}}else if(e.cRequestRefundMoney={id:e.result.id,status:e.newStatus},3==e.newStatus){if(null==e.result.payDesc||0==e.result.payDesc.length)return void toastr.error("توضیحات نمی تواند خالی باشد.لطفاً دلیل رد را وارد کنید.");e.cRequestRefundMoney.payDsc=e.result.payDesc}NProgress.start(),$.blockUI(),t.processRequestRefundMoney(e.cRequestRefundMoney).then(function(t){t.data;toastr.success(s.instant("common.successfullySavedMessage")),e.showError=!1,a.setNeedRefresh(!0),l(e.result.id)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.closeModal=function(){c.dismiss("cancel")}}]),angular.module("emixApp.controllers").controller("operationtypelist_index",["$scope","httpServices","PagerService","$rootScope","shareFunc","sharedInfo","$translate",function(e,t,n,a,o,r,c){"use strict";function i(){NProgress.start(),$.blockUI(),t.getAllOperationTypeWrappers().then(function(t){var n=t.data;e.dtData=n.returnObject},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})}i(),e.editOperationType=function(e){var t={operationTypeId:e.id};o.openModal(t,"/nimdalenap/home/ngApp/pages/application/accounting/common/operation/edit.html","editOperationtype_index",null,function(e){r.getNeedRefresh()&&i()},function(){r.getNeedRefresh()&&i()})},e.dtOptions={id:"dtOperationTypes",saveState:!0,allowFilter:!0,additionalSortFieldName:"id"},e.dtCols=[{name:"id",title:"common.id",allowSorting:!0,cellClass:"text-center",headerClass:"text-center"},{name:"code",title:"common.code",allowSorting:!0,cellClass:"text-center",headerClass:"text-center"},{name:"name",title:"common.name",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-10"},{name:"active",title:"common.status",allowSorting:!0,headerClass:"text-center col-md-1",cellClass:"text-center",cellTemplate:" <span class=\"label label-{{data.active ? 'success' : 'danger'}}\">{{data.active ? ('common.active' | translate) : ('common.inactive' | translate)}}</span>"},{name:"",title:"",allowSorting:!1,headerClass:"text-center col-md-3",cellClass:"tdcommand",cellTemplate:'<button class="btn btn-warning" ng-click="events.editOperationType(data);"\n               button-text="common.edit">\n          </button>'}],e.dtData=[],e.dtAdditionalData={shopCurrency:a.shopCurrency},e.dtEvents={editOperationType:function(t){e.editOperationType(t)}}}]),angular.module("emixApp.controllers").controller("editOperationtype_index",["$scope","httpServices","passObject","$rootScope","$filter","shareFunc","sharedInfo","$modalInstance","$translate",function(e,t,n,a,o,r,c,i,s){"use strict";e.showError=!1,e.showBreadcrump=!n,e.wageTypeList=c.getWageTypeList(),e.operationSourceTypeList=c.getOperationSourceTypeList(),e.getOperationTypeInfo=function(){NProgress.start(),$.blockUI(),t.getOperationTypeInfo(n.operationTypeId).then(function(t){var n=t.data;e.result={id:n.returnObject.id,name:n.returnObject.name,description:n.returnObject.description,active:n.returnObject.active,minAmount:n.returnObject.minAmount,maxAmount:n.returnObject.maxAmount,globalMaxDailyAmount:n.returnObject.globalMaxDailyAmount,wageType:n.returnObject.wageType,wageRate:n.returnObject.wageRate,wageAmount:n.returnObject.wageAmount,order:n.returnObject.order,defaultAmounts:n.returnObject.defaultAmountList,notify:n.returnObject.notify},e.readOnlyResult={code:n.returnObject.code,operationType:n.returnObject.operationType,sourceType:n.returnObject.sourceType,starter:n.returnObject.starter}},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.getOperationTypeInfo(),e.ok=function(){e.editOperationType()},e.editOperationType=function(){if(e.showError=!0,e.myForm.$valid)if(e.result.minAmount&&e.result.maxAmount&&parseFloat(e.result.minAmount)>parseFloat(e.result.maxAmount)||e.result.minAmount&&e.result.globalMaxDailyAmount&&parseFloat(e.result.minAmount)>parseFloat(e.result.globalMaxDailyAmount)||e.result.maxAmount&&e.result.globalMaxDailyAmount&&parseFloat(e.result.maxAmount)>parseFloat(e.result.globalMaxDailyAmount))toastr.error(s.instant("accountingOperation.limitsValidateErrorHint"));else{var n=0===e.result.defaultAmounts.length?-1:Math.min.apply(Math,e.result.defaultAmounts.map(function(e){return e})),a=0===e.result.defaultAmounts.length?-1:Math.max.apply(Math,e.result.defaultAmounts.map(function(e){return e}));e.result.minAmount&&-1!==n&&parseFloat(e.result.minAmount)>n||e.result.maxAmount&&-1!==a&&parseFloat(e.result.maxAmount)<a||e.result.globalMaxDailyAmount&&-1!==a&&parseFloat(e.result.globalMaxDailyAmount)<a?toastr.error(s.instant("accountingOperation.limitsValidateDefaultAmountConfilictErrorHint")):(0===e.result.wageType&&(e.result.wageRate=e.result.wageAmount=null),NProgress.start(),$.blockUI(),t.editOperationType(e.result).then(function(t){t.data;toastr.success(s.instant("common.successfullySavedMessage")),c.setNeedRefresh(!0),setTimeout(e.closeModal(),1e3)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()}))}},e.showDefaultAmountError=!1,e.defaultAmount="",e.addDefaultAmount=function(){if(e.showDefaultAmountError=!0,e.defaultAmount){if(e.result.defaultAmounts.indexOf(parseFloat(e.defaultAmount))>=0)return void toastr.error(s.instant("common.duplicateElement2",{element:s.instant("common.value")}));if(e.result.maxAmount&&e.defaultAmount>e.result.maxAmount||e.result.globalMaxDailyAmount&&e.defaultAmount>e.result.maxAmount||e.result.maxAmount&&e.defaultAmount<e.result.minAmount)return void toastr.error(s.instant("accountingOperation.defaultAmountValidateHint"));e.result.defaultAmounts.push(parseFloat(e.defaultAmount)),e.showDefaultAmountError=!1,e.validateIp=!0,e.defaultAmount=""}},e.removeDefaultAmount=function(t){var n=e.result.defaultAmounts.indexOf(t);e.result.defaultAmounts.splice(n,1)},e.closeModal=function(){i.dismiss("cancel")}}]),angular.module("emixApp.controllers").controller("useraccountlist_index",["$scope","httpServices","PagerService","$rootScope","shareFunc","sharedInfo","$translate","$route","$timeout",function(e,t,n,a,o,r,c,i,s){"use strict";e.isAdminPanel="admin"===t.getPanelType(),e.accountTypeIsCredit=i.current.$$route.originalPath.includes("credit"),e.accountTypeFilter=function(t){var n=parseInt(e.accountType,10);return t.accountTypeId===n},e.accountTypeChange=function(){e.accountTypeIsCredit?e.getAccountWrappersByUserNameAndTypeId():e.dtData=(e.result||[]).filter(function(t){var n=parseInt(e.accountType,10);return t.accountTypeId===n})},e.getAllActiveAccountTypes=function(n){(n=!0===n)||(NProgress.start(),$.blockUI()),t.getAllActiveAccountTypes().then(function(t){var a=t.data;e.allActiveAccountTypes=a.returnObject,e.accountTypeIsCredit&&(e.allActiveAccountTypes=e.allActiveAccountTypes.filter(function(e){return"CREDIT_ORGANIZATION"===e.name})),e.accountType=e.allActiveAccountTypes[0].id,n&&(e.isAdminPanel?e.search():e.getMyAccountWrappersByTypeId())},function(e){t.handleError(e.data,e.status,e.headers,e.config),n&&(NProgress.done(),$.unblockUI())}).finally(function(){n||(NProgress.done(),$.unblockUI())})},e.getAllActiveAccountTypes(),e.userEvents={onSelected:function(t){e.selectedUser=t,e.search()}},e.userOptions={id:"dbxUserAccount",dataKeyField:"username",saveState:!0,saveStateKey:"dbxUserAccountListUser"},e.selectedUserName="",e.selectedUser="",e.afterRestoreSavedState=function(){},e.search=function(){s(function(){e.accountTypeIsCredit?e.getAccountWrappersByUserNameAndTypeId():e.getAccountWrappersByUserName()},300)},e.addEdit=function(t){var n={accountTypeId:e.accountType};t?n.id=t.id:(n.selectedUserName=angular.copy(e.selectedUserName),n.selectedUser=angular.copy(e.selectedUser)),o.openModal(n,"/nimdalenap/home/ngApp/pages/application/accounting/user_accounts/add.html","addaccountcredit_index","x-lg",function(t){e.search()},function(){r.getNeedRefresh()&&e.search()})},e.disableAccount=function(n){NProgress.start(),$.blockUI(),t.disableAccount(n.id).then(function(t){toastr.success(c.instant("common.successfullyDeletedMessage")),e.search()},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.getAccountWrappersByUserName=function(){e.selectedUserName?(e.accountType=e.allActiveAccountTypes&&e.allActiveAccountTypes[0]?e.allActiveAccountTypes[0].id:null,NProgress.start(),$.blockUI(),t.getAccountWrappersByUserName(e.selectedUserName).then(function(t){var n=t.data;e.result=n.returnObject,e.accountTypeChange()},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})):e.dtData=[]},e.getAccountWrappersByUserNameAndTypeId=function(){e.selectedUserName?(NProgress.start(),$.blockUI(),e.accountType?t.getAccountWrappersByUserNameAndTypeId(e.selectedUserName,e.accountType).then(function(t){var n=t.data;e.dtData=n.returnObject},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()}):e.getAllActiveAccountTypes(!0)):e.dtData=[]},e.getMyAccountWrappersByTypeId=function(){NProgress.start(),$.blockUI(),e.accountType?t.getMyAccountWrappersByTypeId(e.accountType).then(function(t){var n=t.data;e.dtData=n.returnObject},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()}):e.getAllActiveAccountTypes(!0)},e.isAdminPanel||e.getMyAccountWrappersByTypeId(),e.manualTransactionRequestList=function(e){var t={accountId:e.id};o.openModal(t,"/nimdalenap/home/ngApp/pages/application/accounting/manual-transaction-request/index.html","manualtransactionsrequest_index","2x-lg",function(e){},function(){})},e.accountStatement=function(e){var t={accountId:e.id};o.openModal(t,"/nimdalenap/home/ngApp/pages/application/accounting/user_accounts/statements.html","accountstatements_index","2x-lg",function(e){},function(){})},e.dtOptions={id:"dtUserAccounts",saveState:!0,allowFilter:!1,additionalSortFieldName:"id"},e.dtCols=[{name:"id",title:"common.id",allowSorting:!0,cellClass:"text-center",headerClass:"text-center tdmini"},{name:"name",title:"common.name",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-3"},{name:"availableBalance",title:"accounting.balance",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2",cellTemplate:'<span>{{data.availableBalance | currency:"":additionalData.shopFractionSize}} <small>{{additionalData.shopCurrency}}</small></span>'},{name:"block",title:"accounting.blocked",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2",cellTemplate:'<span>{{data.block | currency:"":additionalData.shopFractionSize}} <small>{{additionalData.shopCurrency}}</small></span>'},{name:"createDate",title:"common.createDate",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2"},{name:"",title:"",allowSorting:!1,headerClass:"text-center tdmini",cellClass:"tdcommand",cellTemplate:'    <div class="btn-group" ng-if="additionalData.accountTypeIsCredit">\n        <button type="button" class="btn btn-info btn-rounded dropdown-toggle" data-toggle="dropdown" aria-expanded="false">{{\'common.action\' | translate}} <span class="caret"></span></button>\n        <div class="dropdown-menu panel-dropdown action-list" role="menu">\n           <button class="btn btn-warning" ng-if="additionalData.isAdminPanel" ng-click="events.edit(data);"\n              button-type="edit">\n           </button>\n            <button class="btn btn-warning" ng-if="additionalData.isAdminPanel" ng-click="events.manualTransactionRequestList(data);"\n               button-text="accounting.manualTransactionRequestList">\n            </button>\n           <a class="btn" ng-href="{{additionalData.accountCreditDetails + \'/\' + data.accountTypeId + \'/\' + data.id}}"\n               button-text="accounting.accountCreditList">\n           </a>            <a class="btn" \n               ng-href="{{additionalData.accountMerchantLimit + \'/\' + data.id}}" button-text="common.merchants"></a>\n            <button class="btn btn-danger" ng-if="additionalData.isAdminPanel" ng-click="events.delete(data);"\n               button-type="delete">\n            </button>\n        </div>\n    </div>\n    <button class="btn btn-warning" ng-click="events.accountStatement(data);"\n         button-text="accounting.statement">\n    </button>'}],e.dtData=[],e.dtAdditionalData={shopCurrency:a.shopCurrency,shopFractionSize:a.shopFractionSize,accountTypeIsCredit:e.accountTypeIsCredit,accountCreditDetails:Emix.Pages.accountCreditDetails,accountMerchantLimit:Emix.Pages.accountMerchantLimit,isAdminPanel:e.isAdminPanel},e.dtEvents={accountStatement:function(t){e.accountStatement(t)},delete:function(t){e.disableAccount(t)},edit:function(t){e.addEdit(t)},manualTransactionRequestList:function(t){e.manualTransactionRequestList(t)}}}]),angular.module("emixApp.controllers").controller("accountstatements_index",["$scope","httpServices","passObject","$rootScope","$filter","shareFunc","sharedInfo","$modalInstance","$translate","$modal",function(e,t,n,a,o,r,c,i,s,l){"use strict";e.showBreadcrump=!n,e.params={},NProgress.start(),$.blockUI(),t.getAccountWrapperInfo(n.accountId,0).then(function(a){var o=a.data;e.params.accounts=[o.returnObject],NProgress.start(),$.blockUI(),t.getAccountStatementWrappersForMerchant(n.accountId,n.userCreditId||0,0,1e3).then(function(t){var n=t.data;e.dtData=n.returnObject.result},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){}),e.detailOrder=function(e){var n;!function(e,n){NProgress.start(),$.blockUI(),t.getOrderAsHtml(e).then(function(e){var t=e.data;n(t.returnObject)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})}(e,function(e){n={title:"فاکتور",message:e.result,displayConfirmButton:!1,confirmText:s.instant("common.print"),actionToCall:function(){"undefined"!=typeof bindPrintEvent&&bindPrintEvent()}};var t=l.open({templateUrl:"/nimdalenap/home/ngApp/pages/modal/confirm.html",controller:"confirmmodal_index",size:"x-lg",backdrop:"static",keyboard:!1,resolve:{passObject:function(){return n}}});setTimeout(function(){$("#btnChangeAddressShipment,#btnCancleShipment").hide()},100),setTimeout(function(){$("#btnChangeAddressShipment,#btnCancleShipment").hide()},300),t.result.then(function(e){e&&(bindPrintEvent&&bindPrintEvent(),$("#btnprint").click())},function(){})})},e.dtOptions={id:"dtAccountStatements",saveState:!1,allowFilter:!0,additionalSortFieldName:"id"},e.dtCols=[{name:"id",title:"common.id",allowSorting:!0,cellClass:"text-center",headerClass:"text-center"},{name:"operationTypeCaption",title:"common.type",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2"},{name:"debit",title:"accounting.statement.debit",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2",cellTemplate:'<span>{{data.debit | currency:"":additionalData.shopFractionSize}} <small>{{additionalData.shopCurrency}}</small></span>'},{name:"credit",title:"accounting.statement.credit",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2",cellTemplate:'<span>{{data.credit | currency:"":additionalData.shopFractionSize}} <small>{{additionalData.shopCurrency}}</small></span>'},{name:"createDate",title:"common.createDate",allowSorting:!0,filterable:!1,cellClass:"text-center",headerClass:"text-center col-md-2"},{name:"description",title:"common.description",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-3"},{name:"",title:"",allowSorting:!1,headerClass:"text-center",cellClass:"tdcommand",cellTemplate:'<button class="btn btn-info" id="details" ng-click="events.detailOrder(data);" ng-show="data.orderId" button-type="details"></button>'}],e.dtData=[],e.dtAdditionalData={shopCurrency:a.shopCurrency,shopFractionSize:a.shopFractionSize},e.dtEvents={detailOrder:function(t){e.detailOrder(t.orderId)}},e.closeModal=function(){i.dismiss("cancel")}}]),angular.module("emixApp.controllers").controller("accountcreditdetails_index",["$scope","httpServices","PagerService","$rootScope","shareFunc","sharedInfo","$translate","$routeParams",function(e,t,n,a,o,r,c,i){"use strict";e.accountId=i.accountId,e.accountTypeId=i.accountTypeId,e.getAccountCreditDetails=function(){NProgress.start(),$.blockUI(),t.getAccountCreditDetails(e.accountId).then(function(t){var n=t.data;e.dtData=n.returnObject},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.getAccountCreditDetails(),e.addEdit=function(t){var n={accountId:e.accountId,accountTypeId:e.accountTypeId};t&&(n.id=t.id),o.openModal(n,"/nimdalenap/home/ngApp/pages/application/accounting/user_account_credit/add.html","addaccountcreditdetail_index","x-lg",function(t){e.getAccountCreditDetails()},function(){r.getNeedRefresh()&&e.getAccountCreditDetails()})},e.changeStateAccountCreditDetail=function(e){NProgress.start(),$.blockUI(),t.changeStateAccountCreditDetail(e.id).then(function(t){e.active=t.data.returnObject;var n=e.active?c.instant("common.successfullyActivedElement",{element:c.instant("accounting.accountCreditDetails")}):c.instant("common.successfullyInactivedElement",{element:c.instant("accounting.accountCreditDetail")});toastr.success(n)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.dtOptions={id:"dtAccountCreditDetails",saveState:!0,allowFilter:!1,additionalSortFieldName:"id"},e.dtCols=[{name:"id",title:"common.id",allowSorting:!0,cellClass:"text-center",headerClass:"text-center tdmini"},{name:"title",title:"common.title",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-3"},{name:"creditAmount",title:"accounting.creditAmount",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2",cellTemplate:'<span class="prcblk">{{data.creditAmount | currency:"":additionalData.shopFractionSize}} <small>{{additionalData.shopCurrency}}</small></span>'},{name:"creditAmountPerUser",title:"accounting.creditAmountPerUser",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2",cellTemplate:'<span class="prcblk">{{data.creditAmountPerUser | currency:"":additionalData.shopFractionSize}} <small>{{additionalData.shopCurrency}}</small></span>'},{name:"statusDesc",title:"common.status",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-3",cellTemplate:"<span class=\"label label-{{data.active ? 'success' : 'danger'}}\">{{data.active ? ('common.active' | translate) : ('common.inactive' | translate)}}</span>"},{name:"",title:"",allowSorting:!1,headerClass:"text-center",cellClass:"tdcommand",cellTemplate:'  <div class="btn-group">\n        <button type="button" class="btn btn-info btn-rounded dropdown-toggle" data-toggle="dropdown" aria-expanded="false">{{\'common.action\' | translate}} <span class="caret"></span></button>\n        <div class="dropdown-menu panel-dropdown action-list" role="menu">\n            <button class="btn btn-warning" ng-click="events.edit(data);"\n               button-type="edit">\n            </button>\n            <a class="btn btn-warning" \n               ng-href="{{additionalData.accountCreditDetailPolicy + \'/\' + data.id}}" button-text="accounting.assignToUsers"></a>\n            <a class="btn btn-warning" \n               ng-href="{{additionalData.accountCreditMerchantLimit + \'/\' + data.id}}" button-text="common.merchants"></a>\n        </div>\n    </div>\n    <button class="btn" style="font-weight:100;" id="changeState" ng-click="events.changeState(data)"\n        ng-class="data.active ? \'btn-danger\' : \'btn-primary\'">\n'+"    {{data.active ? ('common.inactive' | translate) : ('common.active' | translate)}}</button>"}],e.dtData=[],e.dtAdditionalData={shopCurrency:a.shopCurrency,shopFractionSize:a.shopFractionSize,accountCreditDetailPolicy:Emix.Pages.accountCreditDetailPolicy,accountCreditMerchantLimit:Emix.Pages.accountCreditMerchantLimit},e.dtEvents={edit:function(t){e.addEdit(t)},changeState:function(t){e.changeStateAccountCreditDetail(t)}}}]),angular.module("emixApp.controllers").controller("addaccountcreditdetail_index",["$scope","httpServices","passObject","$rootScope","$filter","shareFunc","sharedInfo","$modalInstance","$translate","$timeout","$location",function(e,t,n,a,o,r,c,i,s,l,d){"use strict";e.showError=!1,e.showBreadcrump=!n,e.creditTypeList=c.getCreditTypeList(),e.creditViewTypeList=c.getCreditViewTypeList(),e.changeStateAccountCreditDetail=function(n){NProgress.start(),$.blockUI(),t.changeStateAccountCreditDetail(n.id).then(function(t){e.result.active=t.data.returnObject;var a=n.active?s.instant("common.successfullyActivedElement",{element:s.instant("accounting.accountCreditDetails")}):s.instant("common.successfullyInactivedElement",{element:s.instant("accounting.accountCreditDetails")});toastr.success(a),c.setNeedRefresh(!0)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.getAccountPolicyProfiles=function(){NProgress.start(),$.blockUI(),t.getAccountPolicyProfiles(n.accountTypeId).then(function(t){e.accountPolicyProfileList=t.data.returnObject,e.editMode?e.getAccountCreditDetailInfo():e.accountPolicyProfileList&&e.accountPolicyProfileList.length>0&&(e.result.defaultAccountPolicyProfileId=e.accountPolicyProfileList[0].id)},function(n){t.handleError(n.data,n.status,n.headers,n.config),e.editMode&&(NProgress.done(),$.unblockUI())}).finally(function(){e.editMode||(NProgress.done(),$.unblockUI())})},e.getAccountCreditDetailInfo=function(){t.getAccountCreditDetailInfo(n.id).then(function(t){var a=t.data;e.resultForDisplay={remainCreditAmount:a.returnObject.remainCreditAmount,accountName:a.returnObject.account.name,accountBalance:a.returnObject.account.balance,accountBlocked:a.returnObject.account.block},e.result={id:a.returnObject.id,accountId:n.accountId,title:a.returnObject.title,creditTypeId:a.returnObject.creditType,viewType:a.returnObject.viewType,expireDate:a.returnObject.expireDate,defaultAccountPolicyProfileId:a.returnObject.defaultAccountPolicyProfile.id,creditAmount:a.returnObject.creditAmount,creditAmountPerUser:a.returnObject.creditAmountPerUser,minCreditAmount:a.returnObject.minCreditAmount,spendingRestrictions:a.returnObject.spendingRestrictions,rateRestrictions:a.returnObject.rateRestrictions,maxAmountRestrictions:a.returnObject.maxAmountRestrictions,issuer:a.returnObject.issuer,description:a.returnObject.description,active:a.returnObject.active}},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},n&&n.id?e.editMode=!0:e.result={id:null,accountId:n.accountId,title:"",creditTypeId:e.creditTypeList[0].id,viewType:e.creditViewTypeList[0].id,expireDate:"",defaultAccountPolicyProfileId:null,creditAmount:"",creditAmountPerUser:"",minCreditAmount:0,spendingRestrictions:!1,rateRestrictions:"",maxAmountRestrictions:"",issuer:"",description:"",active:!1},e.getAccountPolicyProfiles(),e.ok=function(){e.editMode?e.edit():e.create()},e.create=function(){e.showError=!0,e.myForm.$valid?(NProgress.start(),$.blockUI(),t.createAccountCreditDetail(e.result).then(function(t){t.data;c.setNeedRefresh(!0),setTimeout(e.closeModal(),1e3)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})):toastr.error(s.instant("common.completeFormCarefully"))},e.edit=function(){e.showError=!0,e.myForm.$valid&&(NProgress.start(),$.blockUI(),t.editAccountCreditDetail(e.result).then(function(t){t.data;toastr.success(s.instant("common.successfullySavedMessage")),e.getAccountCreditDetailInfo(),c.setNeedRefresh(!0)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()}))},e.closeModal=function(){i.dismiss("cancel")}}]),angular.module("emixApp.controllers").controller("useraccountpolicycreditdetail_index",["$scope","httpServices","$rootScope","$filter","shareFunc","sharedInfo","$translate","$routeParams","$route","$timeout",function(e,t,n,a,o,r,c,i,s,l){"use strict";e.isAdminPanel="admin"===t.getPanelType(),e.showError=!1,e.id=i.id,e.type="1",e.formType=s.current.$$route.originalPath.includes("accountcreditmerchantlimit")?"accountcreditmerchantlimit":s.current.$$route.originalPath.includes("accountmerchantlimit")?"accountmerchantlimit":"accountcreditdetailpolicy",e.pageTitle="",e.userType="merchant","accountcreditmerchantlimit"===e.formType?e.pageTitle="محدودیت پذیرندگان الگوی اعتباری":"accountmerchantlimit"===e.formType?e.pageTitle="محدودیت پذیرندگان اعتبار":(e.pageTitle="اختصاص الگوی اعتباری به کاربران",e.userType="user"),e.isMerchant="merchant"===e.userType;e.dbxUserOptions="user"===e.userType?e.isAdminPanel?{id:"dbxAddEditUser",dataKeyField:"id",dataCodeField:"username",dataTextField:"firstName, lastName",label:"common.user",additionalSortFieldName:"id",apiUrl:Emix.Api.Users.getUsers,apiParams:{},readOnly:!0}:{id:"dbxAddEditUser",dataKeyField:"customerUserId",dataCodeField:"maskCustomerUserName",dataTextField:"fullName",label:"common.customer",additionalSortFieldName:"customerUserId",apiUrl:Emix.Api.Application.merchant.getMerchantCustomers,apiParams:{},readOnly:!0}:{id:"dbxAddEditUser",dataKeyField:"userId",dataCodeField:"userName",dataTextField:"name",label:"common.merchant",additionalSortFieldName:"id",apiUrl:Emix.Api.Application.merchant.getAllMerchants,apiParams:{},readOnly:!0},e.dbxUserCols="user"===e.userType?e.isAdminPanel?r.getDbxUserCols():r.getDbxMerchantUserCols():r.getDbxMerchantCols(),e.dbxUserEvents={onSelected:function(e){}},e.getAllUserGroupsByUserId=function(){e.userId=e.isAccountCredit?e.masterAccountInfo.account.userId:e.masterAccountInfo.userId,t.getAllUserGroupsByUserId(e.userId).then(function(t){var n=t.data;e.userGroups=n.returnObject},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.userGroupOptions={captionText:"group",displayText:"",onSelect:function(t){e.groupId=t.id}},e.isAccountCredit=!1,e.getMasterInfo=function(){"accountcreditmerchantlimit"===e.formType||"accountcreditdetailpolicy"===e.formType?(e.isAccountCredit=!0,e.getAccountCreditDetailInfo()):"accountmerchantlimit"===e.formType&&e.getAccountWrapperInfo()},e.getInfo=function(){"accountcreditmerchantlimit"===e.formType?e.getAccountCreditMerchantLimitWrappers():"accountmerchantlimit"===e.formType?e.getAccountMerchantLimitWrappers():e.getUserAccountPolicyCreditDetailWrappers()},e.add=function(){"accountcreditmerchantlimit"===e.formType?e.addAccountCreditMerchantLimit():"accountmerchantlimit"===e.formType?e.addAccountMerchantLimit():e.addUserAccountPolicyCreditDetail()},e.delete=function(t){"accountcreditmerchantlimit"===e.formType?e.deleteAccountCreditMerchantLimit(t):"accountmerchantlimit"===e.formType?e.deleteAccountMerchantLimit(t):e.deleteUserAccountPolicyCreditDetail(t)},l(function(){e.getMasterInfo()}),e.getAccountWrapperInfo=function(){NProgress.start(),$.blockUI(),t.getAccountWrapperInfo(e.id).then(function(t){var n=t.data;e.masterAccountInfo=n.returnObject,e.getInfo()},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})},e.getAccountCreditDetailInfo=function(){NProgress.start(),$.blockUI(),t.getAccountCreditDetailInfo(e.id).then(function(t){var n=t.data;e.masterAccountInfo=n.returnObject,e.getInfo()},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})},e.getUserAccountPolicyCreditDetailWrappers=function(){t.getUserAccountPolicyCreditDetailWrappers(e.id).then(function(t){var n=t.data;e.dtData=n.returnObject,e.getAllUserGroupsByUserId()},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})},e.getUserAccountPolicyCreditDetailInfo=function(){t.getUserAccountPolicyCreditDetailInfo(e.id).then(function(t){var n=t.data;e.dtData=n.returnObject},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.addUserAccountPolicyCreditDetail=function(){if("1"!==e.type||e.selectedUserId&&e.selectedUserId.toString().length>0)if("2"!==e.type||e.groupId){NProgress.start(),$.blockUI();var n={accountCreditDetailId:e.id};"1"===e.type&&(n.userId=e.selectedUserId),"2"===e.type&&(n.groupId=e.groupId),t.addUserAccountPolicyCreditDetail(n).then(function(t){toastr.success(c.instant("common.successfullySavedMessage")),e.groupUserName="",e.dbxUserEvents.erase(),e.getInfo()},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})}else toastr.error(c.instant("validate.requiredMessage",{element:c.instant("common.group")}));else toastr.error(c.instant("validate.requiredMessage",{element:c.instant("common.userName")}))},e.deleteUserAccountPolicyCreditDetail=function(n){NProgress.start(),$.blockUI(),t.deleteUserAccountPolicyCreditDetail(e.id,n.userId).then(function(t){toastr.success(c.instant("common.successfullyDeletedMessage")),e.getInfo()},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})},e.getAccountMerchantLimitWrappers=function(){t.getAccountMerchantLimitWrappers(e.id).then(function(t){var n=t.data;e.dtData=n.returnObject,e.getAllUserGroupsByUserId()},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})},e.addAccountMerchantLimit=function(){if("1"!==e.type||e.selectedUserId&&e.selectedUserId.toString().length>0)if("2"!==e.type||e.groupId){NProgress.start(),$.blockUI();var n={sourceId:e.id};"1"===e.type&&(n.userId=e.selectedUserId),"2"===e.type&&(n.groupId=e.groupId),t.addAccountMerchantLimit(n).then(function(t){toastr.success(c.instant("common.successfullySavedMessage")),e.groupUserName="",e.dbxUserEvents.erase(),e.getInfo()},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})}else toastr.error(c.instant("validate.requiredMessage",{element:c.instant("common.group")}));else toastr.error(c.instant("validate.requiredMessage",{element:c.instant("common.userName")}))},e.deleteAccountMerchantLimit=function(n){NProgress.start(),$.blockUI(),t.deleteAccountMerchantLimit(n.id).then(function(t){toastr.success(c.instant("common.successfullyDeletedMessage")),e.getInfo()},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})},e.getAccountCreditMerchantLimitWrappers=function(){t.getAccountCreditMerchantLimitWrappers(e.id).then(function(t){var n=t.data;e.dtData=n.returnObject,e.getAllUserGroupsByUserId()},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})},e.getAccountCreditMerchantLimitWrapperInfo=function(e){t.getAccountCreditMerchantLimitWrapperInfo(e.id).then(function(e){e.data},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.addAccountCreditMerchantLimit=function(){if("1"!==e.type||e.selectedUserId&&e.selectedUserId.toString().length>0)if("2"!==e.type||e.groupId){NProgress.start(),$.blockUI();var n={sourceId:e.id};"1"===e.type&&(n.userId=e.selectedUserId),"2"===e.type&&(n.groupId=e.groupId),t.addAccountCreditMerchantLimit(n).then(function(t){toastr.success(c.instant("common.successfullySavedMessage")),e.groupUserName="",e.dbxUserEvents.erase(),e.getInfo()},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})}else toastr.error(c.instant("validate.requiredMessage",{element:c.instant("common.group")}));else toastr.error(c.instant("validate.requiredMessage",{element:c.instant("common.userName")}))},e.deleteAccountCreditMerchantLimit=function(n){NProgress.start(),$.blockUI(),t.deleteAccountCreditMerchantLimit(n.id).then(function(t){toastr.success(c.instant("common.successfullyDeletedMessage")),e.getInfo()},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})},e.dtOptions={id:"dtUserAccountCreditLimitation",pageSize:15,saveState:!0,allowFilter:!0,additionalSortFieldName:"id",rowClass:"col-md-3 col-sm-6 col-xs-12 pdr-0 pdl-5"},e.dtData=[],e.dtAdditionalData={shopCurrency:n.shopCurrency,shopFractionSize:n.shopFractionSize,formType:e.formType,isMerchant:e.isMerchant},e.dtEvents={delete:function(t){e.delete(t)}}}]),angular.module("emixApp.controllers").controller("addaccountcredit_index",["$scope","httpServices","passObject","$rootScope","$filter","shareFunc","sharedInfo","$modalInstance","$translate","$timeout","$location",function(e,t,n,a,o,r,c,i,s,l,d){"use strict";e.showBreadcrump=!n,e.dbxUserOptions={id:"dbxAddEditUser",dataKeyField:"id",dataCodeField:"username",dataTextField:"firstName, lastName",label:"common.user",additionalSortFieldName:"id",apiUrl:Emix.Api.Users.getUsers,required:!0,disabled:!1,apiParams:{}},e.dbxUserCols=c.getDbxUserCols(),e.dbxUserEvents={onSelected:function(t){e.selectedUserName=null!==t?t.username:null,e.selectedUserId=null!==t?t.id:null,e.selectedUser=t,e.getAccountPolicyProfiles()}},e.selectedUserName=n.selectedUserName&&n.selectedUserName,e.selectedUserId=n.selectedUser&&n.selectedUser.id,e.selectedUser=n.selectedUser&&n.selectedUser,e.getAccountPolicyProfiles=function(){NProgress.start(),$.blockUI(),t.getAccountPolicyProfiles(n.accountTypeId,e.selectedUserId).then(function(t){e.accountPolicyProfileList=t.data.returnObject,e.editMode?e.getAccountWrapperInfo():e.accountPolicyProfileList&&e.accountPolicyProfileList.length>0&&(e.result.accountPolicyProfileId=e.accountPolicyProfileList[0].id)},function(n){t.handleError(n.data,n.status,n.headers,n.config),e.editMode&&(NProgress.done(),$.unblockUI())}).finally(function(){e.editMode||(NProgress.done(),$.unblockUI())})},e.getAccountWrapperInfo=function(){t.getAccountWrapperInfo(n.id).then(function(t){var n=t.data;e.result={id:n.returnObject.id,name:n.returnObject.name,accountTypeId:n.returnObject.accountTypeId,accountPolicyProfileId:n.returnObject.accountPolicyProfileId,description:n.returnObject.description,color:n.returnObject.color},e.selectedUserId=n.returnObject.userId,e.dbxUserOptions.disabled=!0},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},n&&n.id?e.editMode=!0:e.result={name:"",accountTypeId:n.accountTypeId,accountPolicyProfileId:null,description:null,color:"#000000"},e.selectedUser||e.getAccountPolicyProfiles(),e.ok=function(){e.editMode?e.edit():e.create()},e.create=function(){e.showError=!0,e.myForm.$valid?(e.selectedUserId?e.result.userId=e.selectedUserId:toastr.error(s.instant("common.completeFormCarefully")),NProgress.start(),$.blockUI(),t.createAccount(e.result).then(function(t){t.data;c.setNeedRefresh(!0),setTimeout(e.closeModal(),1e3)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})):toastr.error(s.instant("common.completeFormCarefully"))},e.edit=function(){e.showError=!0,e.myForm.$valid&&(NProgress.start(),$.blockUI(),t.editAccount(e.result).then(function(e){e.data;toastr.success(s.instant("common.successfullySavedMessage")),c.setNeedRefresh(!0)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()}))},e.closeModal=function(){i.dismiss("cancel")}}]),angular.module("emixApp.controllers").controller("accountpolicyprofilelist_index",["$scope","httpServices","PagerService","$rootScope","shareFunc","sharedInfo","$translate","$route","$timeout",function(e,t,n,a,o,r,c,i,s){"use strict";e.selectedUserId,e.dbxUserOptions={id:"dbxAddEditUser",dataKeyField:"id",dataCodeField:"username",dataTextField:"firstName, lastName",label:"common.user",additionalSortFieldName:"id",apiUrl:Emix.Api.Users.getUsers,required:!1,disabled:!1,apiParams:{}},e.dbxUserCols=r.getDbxUserCols(),e.dbxUserEvents={onSelected:function(t){e.selectedUser=t,e.selectedUserName=null!==t?t.username:null,e.search()}},e.accountTypeFilter=function(t){var n=parseInt(e.accountType.id,10);return t.accountTypeId===n},e.accountTypeChange=function(){e.getAccountPolicyProfiles()},e.getAccountPolicyProfiles=function(){NProgress.start(),$.blockUI(),t.getAccountPolicyProfiles(e.accountType.id,e.selectedUserId).then(function(t){var n=t.data;e.dtData=n.returnObject},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.getAllActiveAccountTypes=function(){NProgress.start(),$.blockUI(),t.getAllActiveAccountTypes().then(function(t){var n=t.data;e.allActiveAccountTypes=n.returnObject,e.accountType=e.allActiveAccountTypes[0],e.getAccountPolicyProfiles()},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.getAllActiveAccountTypes(),e.afterRestoreSavedState=function(){},e.search=function(){s(function(){e.getAccountPolicyProfiles()},300)},e.addEdit=function(t){var n={accountType:e.accountType};t?n.id=t.id:(n.selectedUserId=angular.copy(e.selectedUserId),n.selectedUserName=angular.copy(e.selectedUserName),n.selectedUser=angular.copy(e.selectedUser)),o.openModal(n,"/nimdalenap/home/ngApp/pages/application/accounting/account-policy-profile/add.html","addaccountpolicyprofile_index","x-lg",function(t){e.search()},function(){r.getNeedRefresh()&&e.search()})},e.deleteAccountPolicyProfile=function(n){NProgress.start(),$.blockUI(),t.deleteAccountPolicyProfile(n.id).then(function(t){toastr.success(c.instant("common.successfullyDeletedMessage")),e.search()},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.dtOptions={id:"dtAccountPolicyProfile",saveState:!0,allowFilter:!1,additionalSortFieldName:"id"},e.dtCols=[{name:"id",title:"common.id",allowSorting:!0,cellClass:"text-center",headerClass:"text-center tdmini"},{name:"name",title:"common.name",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-8"},{name:"active",title:"common.status",allowSorting:!0,headerClass:"text-center col-md-1",cellClass:"text-center",cellTemplate:" <span class=\"label label-{{data.active ? 'success' : 'danger'}}\">{{data.active ? ('common.active' | translate) : ('common.inactive' | translate)}}</span>"},{name:"",title:"",allowSorting:!1,headerClass:"text-center tdmini",cellClass:"tdcommand",cellTemplate:'           <button class="btn btn-warning" ng-click="events.edit(data);"\n              button-type="edit">\n           </button>\n            <button class="btn btn-danger" ng-click="events.delete(data);"\n               button-type="delete">\n            </button>\n'}],e.dtData=[],e.dtAdditionalData={shopCurrency:a.shopCurrency,shopFractionSize:a.shopFractionSize},e.dtEvents={delete:function(t){e.deleteAccountPolicyProfile(t)},edit:function(t){e.addEdit(t)}}}]),angular.module("emixApp.controllers").controller("addaccountpolicyprofile_index",["$scope","httpServices","passObject","$rootScope","$filter","shareFunc","sharedInfo","$modalInstance","$translate","$timeout",function(e,t,n,a,o,r,c,i,s,l){"use strict";e.showBreadcrump=!n,e.dbxUserOptions={id:"dbxAddEditUser",dataKeyField:"id",dataCodeField:"username",dataTextField:"firstName, lastName",label:"common.user",additionalSortFieldName:"id",apiUrl:Emix.Api.Users.getUsers,required:!1,disabled:!1,apiParams:{}},e.dbxUserCols=c.getDbxUserCols(),e.dbxUserEvents={onSelected:function(t){e.selectedUserId=null!==t?t.id:null,e.selectedUser=t}},e.selectedUserId=n.selectedUserId&&n.selectedUserId,e.selectedUserName=n.selectedUserName&&n.selectedUserName,e.selectedUser=n.selectedUser&&n.selectedUser,e.accountType=n.accountType,e.operationTypeList=[],e.getSelectedOperationWrappers=function(){for(var t=[],n=0;n<e.operationTypeList.length;n++)e.operationTypeList[n].selected&&(console.log(e.operationTypeList[n]),t.push({id:e.operationTypeList[n].resultOperationTypeWrapper.id,operationTypeId:e.operationTypeList[n].operationTypeWrapper.id,minAmount:e.operationTypeList[n].resultOperationTypeWrapper.minAmount,maxAmount:e.operationTypeList[n].resultOperationTypeWrapper.maxAmount,globalMaxDailyAmount:e.operationTypeList[n].resultOperationTypeWrapper.globalMaxDailyAmount,order:e.operationTypeList[n].resultOperationTypeWrapper.order,defaultAmounts:e.operationTypeList[n].resultOperationTypeWrapper.defaultAmountList||[]}));return t},e.fillOperationWrappers=function(){for(var t=0;t<e.operationTypeWrappers.length;t++){for(var n=!1,a=null,o=0;o<e.result.accountPolicyProfileOperationTypesDto.length&&(e.operationTypeWrappers[t].id===e.result.accountPolicyProfileOperationTypesDto[o].operationTypeId&&(n=!0,a=angular.copy(e.result.accountPolicyProfileOperationTypesDto[o])),!n);o++);e.operationTypeList.push({selected:n,showDefaultAmountError:!1,defaultAmount:"",operationTypeWrapper:angular.copy(e.operationTypeWrappers[t]),resultOperationTypeWrapper:a||{operationTypeId:e.operationTypeWrappers[t].id,minAmount:null,maxAmount:null,globalMaxDailyAmount:null,order:null,defaultAmountList:[]}})}},e.addDefaultAmount=function(e,t){if(e.showDefaultAmountError=!0,e.defaultAmount){if((e.resultOperationTypeWrapper.defaultAmountList||[]).indexOf(parseFloat(e.defaultAmount))>=0)return void toastr.error(s.instant("common.duplicateElement2",{element:s.instant("common.value")}));if(e.resultOperationTypeWrapper.maxAmount&&parseFloat(e.defaultAmount)>parseFloat(e.resultOperationTypeWrapper.maxAmount)||e.resultOperationTypeWrapper.globalMaxDailyAmount&&parseFloat(e.defaultAmount)>parseFloat(e.resultOperationTypeWrapper.globalMaxDailyAmount)||e.resultOperationTypeWrapper.minAmount&&parseFloat(e.defaultAmount)<e.resultOperationTypeWrapper.minAmount)return void toastr.error(s.instant("accountingOperation.defaultAmountValidateHint"));e.resultOperationTypeWrapper.defaultAmountList=e.resultOperationTypeWrapper.defaultAmountList||[],e.resultOperationTypeWrapper.defaultAmountList.push(parseFloat(e.defaultAmount)),e.showDefaultAmountError=!1,e.defaultAmount="",l(function(){$("#"+t).focus()},500)}},e.removeDefaultAmount=function(e,t){var n=e.resultOperationTypeWrapper.defaultAmountList.indexOf(t);e.resultOperationTypeWrapper.defaultAmountList.splice(n,1)},e.getAllAccountOperationTypeWrappers=function(){NProgress.start(),$.blockUI(),t.getAllAccountOperationTypeWrappers().then(function(t){var n=t.data;e.operationTypeWrappers=n.returnObject,e.editMode?e.getAccountPolicyProfileInfo():e.fillOperationWrappers()},function(n){e.editMode&&(NProgress.done(),$.unblockUI()),t.handleError(n.data,n.status,n.headers,n.config)}).finally(function(){e.editMode||(NProgress.done(),$.unblockUI())})},e.getAccountPolicyProfileInfo=function(){t.getAccountPolicyProfileInfo(n.id).then(function(t){var n=t.data;e.result={id:n.returnObject.id,name:n.returnObject.name,description:n.returnObject.description,active:n.returnObject.active,accountTypeId:n.returnObject.accountType.id,accountPolicyProfileOperationTypesDto:n.returnObject.accountPolicyProfileOperationTypes},e.selectedUserId=n.returnObject.userId,e.dbxUserOptions.disabled=!0,e.fillOperationWrappers()},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},n&&n.id?e.editMode=!0:e.result={userId:null,name:"",description:"",active:!0,accountTypeId:e.accountType.id,accountPolicyProfileOperationTypesDto:[]},e.getAllAccountOperationTypeWrappers(),e.ok=function(){e.result.accountPolicyProfileOperationTypesDto=e.getSelectedOperationWrappers(),e.editMode?e.edit():e.create()},e.create=function(){e.showError=!0,e.myForm.$valid?(e.selectedUserId&&(e.result.userId=e.selectedUserId),NProgress.start(),$.blockUI(),t.createAccountPolicyProfile(e.result).then(function(t){t.data;c.setNeedRefresh(!0),setTimeout(e.closeModal(),1e3)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})):toastr.error(s.instant("common.completeFormCarefully"))},e.edit=function(){e.showError=!0,e.myForm.$valid&&(NProgress.start(),$.blockUI(),t.editAccountPolicyProfile(e.result).then(function(e){e.data;toastr.success(s.instant("common.successfullySavedMessage")),c.setNeedRefresh(!0)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()}))},e.closeModal=function(){i.dismiss("cancel")}}]),angular.module("emixApp.controllers").controller("manualtransactionsrequest_index",["$scope","httpServices","PagerService","$rootScope","shareFunc","sharedInfo","$translate","passObject","$modalInstance",function(e,t,n,a,o,r,c,i,s){"use strict";e.showBreadcrump=!i,e.accountId=i.accountId,e.addEdit=function(t){var n={accountId:e.accountId,accountTypeId:e.accountTypeId};t&&(n.id=t.id),o.openModal(n,"/nimdalenap/home/ngApp/pages/application/accounting/manual-transaction-request/add.html","addmanualtransactionrequest_index","x-lg",function(t){e.dtEvents.dataBind()},function(){r.getNeedRefresh()&&e.dtEvents.dataBind()})},e.removeManualTransactionRequest=function(n){NProgress.start(),$.blockUI(),t.removeManualTransactionRequest(n.id).then(function(t){toastr.success(c.instant("common.successfullyDeletedMessage")),e.dtEvents.dataBind()},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.dtOptions={id:"dtManualTransactionRequest",apiUrl:Emix.Api.Application.accounting.getManualTransactionRequestWrappers,apiParams:{accountId:e.accountId},saveState:!1,allowFilter:!0,additionalSortFieldName:"id"},e.dtCols=[{name:"id",title:"common.id",allowSorting:!0,cellClass:"text-center",headerClass:"text-center tdmini",dataType:r.dataType.int},{name:"userName",title:"common.userName",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-1"},{name:"accountName",title:"accounting.accountName",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2"},{name:"accountTypeDesc",title:"accounting.accountTypeName",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2"},{name:"reference",title:"accounting.bankDepositReference",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-1"},{name:"referenceDate",title:"accounting.bankDepositDate",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2",dataType:r.dataType.date},{name:"amount",title:"common.amount",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-1",dataType:r.dataType.money,cellTemplate:'<span>{{data.amount | currency:"":additionalData.shopFractionSize}} <small>{{additionalData.shopCurrency}}</small></span>'},{name:"statusDesc",keyName:"status",title:"common.status",allowSorting:!1,cellClass:"text-center",headerClass:"text-center col-md-1",dataType:r.dataType.list,filterList:Emix.Api.Application.accounting.getManualTransactionRequestStatuses,filterListKey:"id",filterListValue:"caption"},{name:"",title:"",allowSorting:!1,headerClass:"text-center",cellClass:"tdcommand",cellTemplate:'<button class="btn btn-warning" ng-click="events.edit(data);"\n               button-text="common.edit">\n          </button>\n          <button class="btn btn-danger" deletebutton ng-disabled="data.status !== 0" \n               ng-click="events.delete(data);" button-type="delete">          </button>'}],e.dtData=[],e.dtAdditionalData={shopCurrency:a.shopCurrency,shopFractionSize:a.shopFractionSize},e.dtEvents={edit:function(t){e.addEdit(t)},delete:function(t){e.removeManualTransactionRequest(t)}}}]),angular.module("emixApp.controllers").controller("addmanualtransactionrequest_index",["$scope","httpServices","passObject","$rootScope","$filter","shareFunc","sharedInfo","$modalInstance","$translate","$timeout","$location",function(e,t,n,a,o,r,c,i,s,l,d){"use strict";e.showError=!1,e.showBreadcrump=!n,e.changeStateAccountCreditDetail=function(n){NProgress.start(),$.blockUI(),t.changeStateAccountCreditDetail(n.id).then(function(t){e.result.active=t.data.returnObject;var a=n.active?s.instant("common.successfullyActivedElement",{element:s.instant("accounting.accountCreditDetails")}):s.instant("common.successfullyInactivedElement",{element:s.instant("accounting.accountCreditDetails")});toastr.success(a),c.setNeedRefresh(!0)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.params={},e.getAccountInfo=function(){NProgress.start(),$.blockUI(),t.getAccountInfo(n.accountId).then(function(t){e.accountInfo=t.data.returnObject,e.params.accounts=[e.accountInfo],e.editMode&&e.getManualTransactionRequestWrapperInfo()},function(n){t.handleError(n.data,n.status,n.headers,n.config),e.editMode&&(NProgress.done(),$.unblockUI())}).finally(function(){e.editMode||(NProgress.done(),$.unblockUI())})},e.getManualTransactionRequestWrapperInfo=function(){t.getManualTransactionRequestWrapperInfo(n.id).then(function(t){var a=t.data;e.manualTransactionRequest=a.returnObject,e.result={id:a.returnObject.id,accountId:n.accountId,reference:a.returnObject.reference,referenceDate:c.getValidTime(a.returnObject.referenceDate),description:a.returnObject.description,amount:a.returnObject.amount}},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},n&&n.id?e.editMode=!0:e.result={id:null,accountId:n.accountId,reference:"",referenceDate:"",description:"",amount:""},e.getAccountInfo(),e.ok=function(){e.editMode?e.edit():e.create()},e.create=function(){e.showError=!0,e.myForm.$valid?(NProgress.start(),$.blockUI(),t.createManualTransactionRequest(e.result).then(function(t){var a=t.data;c.setNeedRefresh(!0),e.editMode=!0,n.id=a.returnObject,setTimeout(function(){e.getAccountInfo()},0)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})):toastr.error(s.instant("common.completeFormCarefully"))},e.edit=function(){e.showError=!0,e.myForm.$valid&&(NProgress.start(),$.blockUI(),t.editManualTransactionRequest(e.result).then(function(t){t.data;toastr.success(s.instant("common.successfullySavedMessage")),e.getAccountInfo(),c.setNeedRefresh(!0)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()}))},e.closeModal=function(){i.dismiss("cancel")},e.approve=function(t){var n={title:s.instant("common.verify"),inputType:"textarea",inputCaption:s.instant("common.description"),required:!1};r.openModal(n,"/nimdalenap/home/ngApp/pages/modal/prompt.html","promptmodal_index","md",function(n){var a={id:t.id,status:1,approvedDescription:n};e.approveManualTransactionRequest(a)},function(){})},e.cancel=function(t){var n={title:s.instant("cancel"),inputType:"textarea",inputCaption:s.instant("common.description"),required:!0};r.openModal(n,"/nimdalenap/home/ngApp/pages/modal/prompt.html","promptmodal_index","md",function(n){var a={id:t.id,status:2,approvedDescription:n};e.approveManualTransactionRequest(a)},function(){})},e.approveManualTransactionRequest=function(n){NProgress.start(),$.blockUI(),t.approveManualTransactionRequest(n).then(function(t){t.data;toastr.success(s.instant("common.successfullySavedMessage")),e.getAccountInfo(),c.setNeedRefresh(!0)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})}}]),angular.module("emixApp.controllers").controller("merchantlist_index",["$scope","httpServices","PagerService","$rootScope","shareFunc","sharedInfo","$translate",function(e,t,n,a,o,r,c){"use strict";e.addEdit=function(t){var n={};t&&(n.id=t.id),o.openModal(n,"/nimdalenap/home/ngApp/pages/application/accounting/merchant/add.html","addmerchant_index","lg",function(t){e.dtEvents.dataBind()},function(){r.getNeedRefresh()&&e.dtEvents.dataBind()})},e.changeMerchantState=function(e){NProgress.start(),$.blockUI(),t.changeMerchantState(e.id).then(function(t){var n=t.data;r.setNeedRefresh(!0),e.active=n.returnObject,toastr.success(c.instant("common.successfullySavedMessage"))},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.dtOptions={id:"dtMerchantList",apiUrl:Emix.Api.Application.merchant.getAllMerchants,apiParams:{},saveState:!1,allowFilter:!0,additionalSortFieldName:"id"},e.dtCols=[{name:"id",title:"common.id",allowSorting:!0,cellClass:"text-center",headerClass:"text-center tdmini",dataType:r.dataType.int},{name:"userName",title:"common.userName",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-1"},{name:"name",title:"common.name",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2"},{name:"merchantCategoryName",keyName:"merchantCategoryId",title:"common.type",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-1",dataType:r.dataType.list,filterList:Emix.Api.Application.merchant.getAllMerchantCategories,filterListKey:"id",filterListValue:"name"},{name:"mobileNumber",title:"common.mobile",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-1",dataType:r.dataType.int},{name:"cityName",keyName:"cityId",title:"common.city",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-1",dataType:r.dataType.list,filterList:Emix.Api.Application.global.getCityList,filterListKey:"id",filterListValue:"name"},{name:"regionName",title:"common.region",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-1"},{name:"createDate",title:"common.createDate",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-2",dataType:r.dataType.date},{name:"statusDesc",keyName:"active",title:"common.status",allowSorting:!0,cellClass:"text-center",cellTemplate:" <span class=\"label label-{{data.active ? 'success' : 'danger'}}\">{{data.active ? ('common.active' | translate) : ('common.inactive' | translate)}}</span>",headerClass:"text-center col-md-1",dataType:r.dataType.list,filterList:r.getGlobalStatusList(),filterListKey:"value",filterListValue:"caption"},{name:"",title:"",allowSorting:!1,headerClass:"text-center",cellClass:"tdcommand",cellTemplate:'<button class="btn btn-warning" ng-click="events.edit(data);"\n               button-text="common.edit">\n          </button>\n           <button class="btn" ng-click="events.changeState(data)"\n               ng-class="data.active ? \'btn-danger\' : \'btn-primary\'">\n               {{data.active ? (\'common.inactive\' | translate) : (\'common.active\' | translate)}}\n           </button>\n           <button class="btn btn-default" ng-click="events.customerList(data)"\n               button-text="common.customers">\n           </button>'}],e.dtData=[],e.dtAdditionalData={shopCurrency:a.shopCurrency,shopFractionSize:a.shopFractionSize},e.dtEvents={edit:function(t){e.addEdit(t)},changeState:function(t){e.changeMerchantState(t)},customerList:function(e){let t={merchantId:e.id};o.openModal(t,"/nimdalenap/home/ngApp/pages/application/accounting/merchant/customer/index.html","customerlist_index_modal","x-lg",function(e){},function(){},"start")}}}]),angular.module("emixApp.controllers").controller("addmerchant_index",["$scope","httpServices","passObject","$rootScope","$filter","shareFunc","sharedInfo","$modalInstance","$translate","$timeout","$location",function(e,t,n,a,o,r,c,i,s,l,d){"use strict";e.showError=!1,e.showBreadcrump=!n,e.financeConfig=c.getFinanceConfig(),e.getMerchantViewPolicies=function(){NProgress.start(),$.blockUI(),t.getMerchantViewPolicies().then(function(t){var n=t.data;e.allMerchantViewPolicies=n.returnObject,e.getAllMerchantCategories()},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})},e.getAllMerchantCategories=function(){t.getAllMerchantCategories().then(function(t){var n=t.data;e.allMerchantCategories=n.returnObject,e.allMerchantCategories.unshift({id:null,name:"-------"}),e.editMode?e.getMerchantInfo():e.getCityList(!0,!1)},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})},e.mapZoom=c.getDefaultMapZoom(),e.center={lat:c.getDefaultPosLat(),lng:c.getDefaultPosLan(),zoom:e.mapZoom},e.getCityList=function(n,a){n=n||!1,(a=!1!==a)&&(NProgress.start(),$.blockUI()),t.getCityList().then(function(t){var o=t.data;if(e.cities=o.returnObject,e.editMode){if(n){var r=e.cities.filter(function(t){return t.id===e.result.cityId}),c=r.length>0?r[0]:e.cities[0];e.cityOptions.onSelect(c,n,a)}}else e.cityOptions.onSelect(e.cities[0])},function(e){t.handleError(e.data,e.status,e.headers,e.config),a||(NProgress.done(),$.unblockUI())}).finally(function(){a&&(NProgress.done(),$.unblockUI())})},e.cityOptions={captionText:"common.city",displayText:"",onSelect:function(t,n,a){e.selectedCity=t,e.selectedRegion=null,e.getCityRegionList(n,a)}},e.getCityRegionList=function(n,a){n=n||!1,(a=!1!==a)&&(NProgress.start(),$.blockUI()),e.selectedCity?t.getCityRegionList(e.selectedCity.id).then(function(t){var a=t.data;if(e.cityRegions=a.returnObject,e.editMode&&n){var o=e.cityRegions.filter(function(t){return t.id===e.result.regionId}),r=o.length>0?o[0]:null;e.regionOptions.onSelect(r,n)}},function(e){t.handleError(e.data,e.status,e.headers,e.config),a||(NProgress.done(),$.unblockUI())}).finally(function(){a&&(NProgress.done(),$.unblockUI())}):e.cityRegions=[]},e.regionOptions={captionText:"common.region",displayText:"",onSelect:function(t,n){n=n||!1,e.selectedRegion=t,!n&&e.editMode&&u({lat:t.lat,lng:t.lan})}},e.markers=[],e.$on("leafletDirectiveMap.click",function(e,t){u(t.leafletEvent.latlng)}),e.$on("leafletDirectiveMarker.dragend",function(e,t){u(t.leafletObject._latlng)});var u=function(t){e.address="",e.setMarker(t.lat,t.lng)};e.setMarker=function(t,n){e.center={lat:t,lng:n,zoom:e.mapZoom},e.markers[0]={lat:t,lng:n,draggable:!0}},e.dbxUserOptions={id:"dbxAddEditMerchantUser",dataKeyField:"id",dataCodeField:"username",dataTextField:"firstName, lastName",label:"common.user",additionalSortFieldName:"id",apiUrl:Emix.Api.Users.getUsers,required:!0,disabled:e.editMode,apiParams:{}},e.dbxUserCols=c.getDbxUserCols(),e.dbxUserEvents={onSelected:function(t){e.selectedUserName=null!==t?t.username:null,e.selectedUserId=null!==t?t.id:null,e.selectedUser=t,null==e.selectedUser||e.editMode||e.getMerchantInfoByUserId(e.selectedUserId)}};var p=function(){e.result={id:e.merchantInfo.id,userId:e.merchantInfo.userId,name:e.merchantInfo.name,description:e.merchantInfo.description,address:e.merchantInfo.address,lat:e.merchantInfo.lat,lan:e.merchantInfo.lan,postalCode:e.merchantInfo.postalCode,email:e.merchantInfo.email,mobileNumber:e.merchantInfo.mobileNumber,phoneNumber:e.merchantInfo.phoneNumber,cityId:e.merchantInfo.cityId,regionId:e.merchantInfo.regionId,active:e.merchantInfo.active,merchantCategoryId:e.merchantInfo.merchantCategoryId,otherMerchantViewPolicy:e.merchantInfo.otherMerchantViewPolicy,wallet:e.merchantInfo.wallet,card:e.merchantInfo.card,cardNumber:e.merchantInfo.cardNumber},e.selectedUserId=e.merchantInfo.userId,e.setMarker(e.merchantInfo.lat,e.merchantInfo.lan),e.getCityList(!0,!1),e.dbxUserOptions.disabled=!0};e.getMerchantInfo=function(){t.getMerchantInfo(n.id).then(function(t){var n=t.data;e.merchantInfo=n.returnObject,p()},function(e){t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})},e.getMerchantInfoByUserId=function(n){t.getMerchantInfoByUserId(n).then(function(t){var n=t.data;e.merchantInfo=n.returnObject,e.editMode=!0,p()},function(e){400!==e.status&&404!==e.status&&t.handleError(e.data,e.status,e.headers,e.config),NProgress.done(),$.unblockUI()}).finally(function(){})},n&&n.id?e.editMode=!0:e.result={id:null,userId:null,name:"",description:"",address:"",lat:null,lan:null,postalCode:"",email:"",mobileNumber:"",phoneNumber:"",cityId:null,regionId:null,merchantCategoryId:null,otherMerchantViewPolicy:1,wallet:!1,card:!1,cardNumber:null},e.getMerchantViewPolicies(),e.ok=function(){e.addEditMerchant()},e.addEditMerchant=function(){e.showError=!0,e.myForm.$valid&&null!==e.selectedCity&&null!==e.selectedRegion?e.result.card||e.result.wallet?!e.result.card||e.result.cardNumber?(e.result.card||(e.result.cardNumber=null),e.result.lat=e.center.lat,e.result.lan=e.center.lng,e.result.userId=e.selectedUserId,e.result.cityId=e.selectedCity.id,e.result.regionId=e.selectedRegion.id,NProgress.start(),$.blockUI(),t.addEditMerchant(e.result).then(function(t){var n=t.data;c.setNeedRefresh(!0),e.editMode=!0,e.merchantInfo=n.returnObject,setTimeout(function(){p()},0),toastr.success(s.instant("common.successfullySavedMessage"))},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})):toastr.error(s.instant("validate.requiredMessage",{element:s.instant("accounting.cardNumber")})):toastr.error(s.instant("validate.requiredMessage",{element:s.instant("wallet.allowedPaymentGateways")})):toastr.error(s.instant("common.completeFormCarefully"))},e.changeMerchantState=function(){NProgress.start(),$.blockUI(),t.changeMerchantState(e.result.id).then(function(t){var n=t.data;c.setNeedRefresh(!0),e.result.active=n.returnObject,toastr.success(s.instant("common.successfullySavedMessage"))},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.closeModal=function(){i.dismiss("cancel")}}]);var customerList=function(e,t,n,a,o,r,c,i){"use strict";e.showBreadcrump=!i,e.merchantId=e.showBreadcrump?0:i.merchantId;var s=e.merchantId>0?{merchantId:e.merchantId}:{};e.dtOptions={id:"dtCustomerList",apiUrl:Emix.Api.Application.merchant.getMerchantCustomers,apiParams:s,saveState:!1,allowFilter:!0,additionalSortFieldName:"id"},e.dtCols=[{name:"maskCustomerUserName",title:"common.userName",allowSorting:!0,cellClass:"text-center ltrdir",headerClass:"text-center col-md-3"},{name:"fullName",title:"common.name",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-5"},{name:"createDate",title:"common.createDate",allowSorting:!0,cellClass:"text-center",headerClass:"text-center col-md-4",dataType:r.dataType.date},{name:"",title:"",allowSorting:!1,headerClass:"text-center",cellClass:"tdcommand"}],e.dtData=[],e.dtAdditionalData={},e.dtEvents={}};angular.module("emixApp.controllers").controller("customerlist_index",["$scope","httpServices","PagerService","$rootScope","shareFunc","sharedInfo",customerList]),angular.module("emixApp.controllers").controller("customerlist_index_modal",["$scope","httpServices","PagerService","$rootScope","shareFunc","sharedInfo","$modalInstance","passObject",customerList]),angular.module("emixApp.controllers").controller("accountingdashboard_index",["$scope","httpServices","$translate","$filter","$rootScope",function(e,t,n,a,o){"use strict";void 0===jQuery.cookie("accessToken")&&"skin-blue ng-scope"===$("body").attr("class")||(jQuery(".sidebar-toggle").show(),jQuery(".navbar-custom-menu").show()),e.getAccountingDashboardWrapper=function(){NProgress.start(),$.blockUI(),t.getAccountingDashboardWrapper().then(function(t){var n=t.data;e.result=n.returnObject,e.setMoneyInOutChartData(e.result.accountDashboardLabels,e.result.moneyInOut),e.setRegisterMerchantCountChartData(e.result.accountDashboardLabels,e.result.registerMerchantCount),e.setRegisterUserCountChartData(e.result.accountDashboardLabels,e.result.registerUserCount),e.setOperationTypeSummeryChartData(e.result.operationTypeSummeryLabels,e.result.operationTypeSummery)},function(e){t.handleError(e.data,e.status,e.headers,e.config)}).finally(function(){NProgress.done(),$.unblockUI()})},e.getAccountingDashboardWrapper(),e.setMoneyInOutChartData=function(t,n){e.moneyInOutChartsLabels=t,e.moneyInOutChartsData=n},e.setRegisterMerchantCountChartData=function(t,n){e.registerMerchantCountChartsLabels=t,e.registerMerchantCountChartsData=n},e.setRegisterUserCountChartData=function(t,n){e.registerUserCountChartsLabels=t,e.registerUserCountChartsData=n},e.setOperationTypeSummeryChartData=function(t,n){e.operationTypeSummeryChartsLabels=t,e.operationTypeSummeryChartsData=n[0]},setTimeout(function(){$('[data-toggle="tooltip"]').tooltip(),$(".collapse").collapse()},0),e.collapsClick=function(e){var t=$('[data-target="'+e+'"]'),n=t.find(".fa");"true"==t.attr("aria-expanded")?(n.removeClass("fa-minus"),n.addClass("fa-plus")):(n.removeClass("fa-plus"),n.addClass("fa-minus"))},e.chartColors=["#00ADF9","#803690","#DCDCDC","#46BFBD","#FDB45C","#949FB1","#4D5360","#ff6384","#ff8e72"],e.colors=["#45b7cd","#ff6384","#ff8e72"],e.moneyInOutOptions={responsive:!0,interaction:{mode:"index",intersect:!1},plugins:{legend:{display:!0},tooltip:{callbacks:{label:function(e){let t=n.instant(e.dataset.label||"");if(t&&(t+=": "),null!==e.parsed.y){t+=a("currency")(e.parsed.y,"",o.shopFractionSize)}return t}}}},scales:{y:{display:!0,position:"left"}}},e.moneyInOutDataset=[{label:"واریز بانکی",fill:!0,fillColor:"rgba(60,141,188,0.9)",strokeColor:"rgba(60,141,188,0.8)",pointColor:"#00a65a",pointStrokeColor:"rgba(0,166,90,1)",pointHighlightFill:"#fff",pointHighlightStroke:"rgba(0,166,90,1)",borderColor:"rgba(0,166,90, 1)",borderRadius:5,backgroundColor:"rgba(0,166,90,0.5)",pointBorderColor:"rgba(0,166,90,0.7)",pointBackgroundColor:"rgba(0,166,90,0.2)",pointBorderWidth:1,type:"line",tension:.3},{label:"برداشت بانکی",fill:!0,fillColor:"rgba(255,99,132,0.9)",strokeColor:"rgba(255,99,132,0.8)",pointColor:"#ff6384",pointStrokeColor:"rgba(255,99,132,1)",pointHighlightFill:"#fff",pointHighlightStroke:"rgba(255,99,132,1)",borderColor:"rgba(255,99,132, 0.7)",borderRadius:5,backgroundColor:"rgba(255,99,132, 0.5)",pointBorderColor:"rgba(255,99,132, 0.9)",pointBackgroundColor:"rgba(255,99,132, 0.4)",pointBorderWidth:1,type:"line",tension:.3}],e.registerMerchantCountOptions={responsive:!0,interaction:{mode:"index",intersect:!1},stacked:!1,plugins:{legend:{display:!1},tooltip:{callbacks:{label:function(e){let t=n.instant(e.dataset.label||"");if(t&&(t+=": "),null!==e.parsed.y){t+=a("currency")(e.parsed.y,"",o.shopFractionSize)}return t}}}}},e.registerMerchantCountDataset=[{label:n.instant("common.count")+" ",fill:!0,fillColor:"rgba(60,141,188,0.9)",strokeColor:"rgba(60,141,188,0.8)",pointColor:"#3b8bba",pointStrokeColor:"rgba(60,141,188,1)",pointHighlightFill:"#fff",pointHighlightStroke:"rgba(60,141,188,1)",borderColor:"rgba(60, 141, 188, 0.7)",backgroundColor:"rgba(44, 152, 214, 0.5)",pointBorderColor:"rgba(37, 103, 142, 0.9)",pointBackgroundColor:"rgba(60, 141, 188, 0.4)",pointBorderWidth:1,type:"line",tension:.3}],e.registerUserCountOptions={responsive:!0,interaction:{mode:"index",intersect:!1},stacked:!1,plugins:{legend:{display:!1},tooltip:{callbacks:{label:function(e){let t=n.instant(e.dataset.label||"");if(t&&(t+=": "),null!==e.parsed.y){t+=a("currency")(e.parsed.y,"",o.shopFractionSize)}return t}}}}},e.registerUserCountDataset=[{label:n.instant("common.count")+" ",fill:!0,fillColor:"rgba(253, 180, 92,0.9)",strokeColor:"rgba(253, 180, 92,0.8)",pointColor:"#FDB45C",pointStrokeColor:"rgba(253, 180, 92,1)",pointHighlightFill:"#fff",pointHighlightStroke:"rgba(253, 180, 92,1)",borderColor:"rgba(253, 180, 92, 0.7)",backgroundColor:"rgba(253, 180, 92, 0.5)",pointBorderColor:"rgba(253, 180, 92, 0.9)",pointBackgroundColor:"rgba(253, 180, 92, 0.4)",pointBorderWidth:1,type:"line",tension:.3}],e.operationTypeSummeryOptions={responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!0},tooltip:{callbacks:{label:function(e){let t=n.instant(e.label||"");if(t&&(t+=": "),null!==e.raw){t+=a("currency")(e.raw,"",o.shopFractionSize)}return t}}}}}}]);